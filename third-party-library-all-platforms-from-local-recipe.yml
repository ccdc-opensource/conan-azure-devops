parameters:
  - name: package
    type: string
  - name: package_version
    type: string
  - name: user
    type: string
    default: ccdc
  - name: channel
    type: string
    default: testing
  - name: artifactory_api_key
    type: string
    default: ''
  - name: build_types
    type: object
    default:
      - Release
      - Debug
      - RelWithDebInfo
  - name: destination_repository
    type: string
    default: ccdc-3rdparty-conan
  - name: platforms
    type: object
    default:
      - centos7_gcc9
      - ubuntu2004_gcc10
      - macos1015_xcode11
      - win2016_vs2017
      - win2019_vs2019

jobs:
- ${{ if containsValue(parameters.platforms, 'centos7_gcc9') }}:
  - job: centos7_gcc9
    pool:
      vmImage: "ubuntu-latest"
    # We use a container to run the build as we must be compatible with centos7's older glibc
    container: rockdreamer/centos7-gcc9:latest
    steps:
      # No need to setup specific python, the container's python3 will be used
      - template: single-local-recipe-build.yml@templates
        parameters:
          python: 'python3'
          package: ${{ parameters.package }}
          package_version: ${{ parameters.package_version }}
          user: ${{ parameters.user }}
          channel: ${{ parameters.channel }}
          profile: centos7-gcc9-x86_64
          artifactory_api_key: ${{ parameters.artifactory_api_key }}
          build_types: ${{ parameters.build_types }}
          destination_repository: ${{ parameters.destination_repository }}

- ${{ if containsValue(parameters.platforms, 'ubuntu2004_gcc10') }}:
  - job: ubuntu2004_gcc10
    pool:
      vmImage: "ubuntu-latest"
    # We use a container to run the build as we must be compatible with centos7's older glibc
    container: rockdreamer/ubuntu20-gcc10:latest
    steps:
      # No need to setup specific python, the container's python3 will be used
      - template: single-local-recipe-build.yml@templates
        parameters:
          python: 'python3'
          package: ${{ parameters.package }}
          package_version: ${{ parameters.package_version }}
          user: ${{ parameters.user }}
          channel: ${{ parameters.channel }}
          profile: ubuntu20-gcc10-x86_64
          artifactory_api_key: ${{ parameters.artifactory_api_key }}
          build_types: ${{ parameters.build_types }}
          destination_repository: ${{ parameters.destination_repository }}

- ${{ if containsValue(parameters.platforms, 'macos1015_xcode11') }}:
  - job: macos1015_xcode11
    pool:
      vmImage: "macOS-latest"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: "Use latest python 3.8"
      - template: single-local-recipe-build.yml@templates
        parameters:
          python: 'python'
          package: ${{ parameters.package }}
          package_version: ${{ parameters.package_version }}
          user: ${{ parameters.user }}
          channel: ${{ parameters.channel }}
          artifactory_api_key: ${{ parameters.artifactory_api_key }}
          profile: macos-xcode11-x86_64
          build_types: ${{ parameters.build_types }}
          destination_repository: ${{ parameters.destination_repository }}

- ${{ if containsValue(parameters.platforms, 'win2016_vs2017') }}:
  - job: win2016_vs2017
    pool:
      vmImage: "vs2017-win2016"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: "Use latest python 3.8"
      - template: single-local-recipe-build.yml@templates
        parameters:
          python: 'python'
          package: ${{ parameters.package }}
          package_version: ${{ parameters.package_version }}
          user: ${{ parameters.user }}
          channel: ${{ parameters.channel }}
          artifactory_api_key: ${{ parameters.artifactory_api_key }}
          profile: windows-msvc15-amd64
          build_types: ${{ parameters.build_types }}
          destination_repository: ${{ parameters.destination_repository }}

- ${{ if containsValue(parameters.platforms, 'win2019_vs2019') }}:
  - job: win2019_vs2019
    pool:
      vmImage: "windows-2019"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: "Use latest python 3.8"
      - template: single-local-recipe-build.yml@templates
        parameters:
          python: 'python'
          package: ${{ parameters.package }}
          package_version: ${{ parameters.package_version }}
          user: ${{ parameters.user }}
          channel: ${{ parameters.channel }}
          artifactory_api_key: ${{ parameters.artifactory_api_key }}
          profile: windows-msvc16-amd64
          build_types: ${{ parameters.build_types }}
          destination_repository: ${{ parameters.destination_repository }}
